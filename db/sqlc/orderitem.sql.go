// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: orderitem.sql

package db

import (
	"context"
)

const createOrderItem = `-- name: CreateOrderItem :one
INSERT INTO orderitem (
                       order_id,
                       food_id,
                       quantity,
                       item_price)
VALUES (
        $1,
        $2,
        $3,
        $4)
    RETURNING id, order_id, food_id, quantity, item_price
`

type CreateOrderItemParams struct {
	OrderID   int32 `json:"order_id"`
	FoodID    int32 `json:"food_id"`
	Quantity  int32 `json:"quantity"`
	ItemPrice int32 `json:"item_price"`
}

func (q *Queries) CreateOrderItem(ctx context.Context, arg CreateOrderItemParams) (Orderitem, error) {
	row := q.db.QueryRowContext(ctx, createOrderItem,
		arg.OrderID,
		arg.FoodID,
		arg.Quantity,
		arg.ItemPrice,
	)
	var i Orderitem
	err := row.Scan(
		&i.ID,
		&i.OrderID,
		&i.FoodID,
		&i.Quantity,
		&i.ItemPrice,
	)
	return i, err
}

const deleteOrderItem = `-- name: DeleteOrderItem :exec
DELETE FROM orderitem
WHERE id = $1
`

func (q *Queries) DeleteOrderItem(ctx context.Context, id int32) error {
	_, err := q.db.ExecContext(ctx, deleteOrderItem, id)
	return err
}

const getOrderItemByOrder = `-- name: GetOrderItemByOrder :one
SELECT id, order_id, food_id, quantity, item_price FROM orderitem
WHERE order_id = $1
ORDER BY id
`

func (q *Queries) GetOrderItemByOrder(ctx context.Context, orderID int32) (Orderitem, error) {
	row := q.db.QueryRowContext(ctx, getOrderItemByOrder, orderID)
	var i Orderitem
	err := row.Scan(
		&i.ID,
		&i.OrderID,
		&i.FoodID,
		&i.Quantity,
		&i.ItemPrice,
	)
	return i, err
}

const updateOrderItem = `-- name: UpdateOrderItem :one
UPDATE orderitem
SET quantity = $2
WHERE id = $1
    RETURNING id, order_id, food_id, quantity, item_price
`

type UpdateOrderItemParams struct {
	ID       int32 `json:"id"`
	Quantity int32 `json:"quantity"`
}

func (q *Queries) UpdateOrderItem(ctx context.Context, arg UpdateOrderItemParams) (Orderitem, error) {
	row := q.db.QueryRowContext(ctx, updateOrderItem, arg.ID, arg.Quantity)
	var i Orderitem
	err := row.Scan(
		&i.ID,
		&i.OrderID,
		&i.FoodID,
		&i.Quantity,
		&i.ItemPrice,
	)
	return i, err
}
